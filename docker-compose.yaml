services:
  client-app:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - backend-net

  api-app:
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:${API_PORT}"
    environment:
      SQLALCHEMY_DATABASE_URI: ${API_DATA_URL}
      PORT: ${API_PORT}
    healthcheck:
      test: curl -f http://127.0.0.1:${API_PORT}/api/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500mb  
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"  
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend-net

  database:
    image: postgres:13.14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 1m30s
      timeout: 10s
      start_period: 1m30s
      retries: 3
    volumes:
      - "./.database:/var/lib/postgresql/data"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - backend-net

networks:
  backend-net:

volumes:
  prefect-data:
    driver: local